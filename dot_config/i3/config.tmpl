set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Inter SemiBold 9.5

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Have numlock on from the start
exec --no-startup-id numlockx

# Auto-switch to and from bluetooth headset
exec python {{ .chezmoi.homeDir }}/.config/i3/bluetooth_audio_switcher.py

# If inside VMWare, then enable copy-paste
{{ output "bash" "-c" "if lspci | grep VMware > /dev/null; then echo exec --no-startup-id vmware-user; fi" }}

exec_always --no-startup-id feh --bg-scale {{ .chezmoi.homeDir }}/Images/background.png
exec_always --no-startup-id killall picom; picom -I 0.05 -O 0.05 --focus-exclude "name *= 'i3lock'|| _NET_WM_STATE@[0]:32a = '_NET_WM_STATE_FULLSCREEN'" --fade-exclude "name = 'rofi'"
exec_always --no-startup-id killall -q polybar; while pgrep -u $UID -x polybar >/dev/null; do sleep 1; done; for m in $(polybar --list-monitors | cut -d":" -f1); do MONITOR=$m polybar --reload main & done
exec_always --no-startup-id killall dunst; dunst
exec_always --no-startup-id killall snixembed; snixembed --fork
exec_always --no-startup-id killall safeeyes; safeeyes

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%+ && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%- && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id wpctl set-source-mute @DEFAULT_AUDIO_SOURCE@ toggle && $refresh_i3status

# Brightness
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +10
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 10-

# Media control
bindsym XF86AudioPlay exec "playerctl --all-players play-pause"
bindsym XF86AudioStop exec "playerctl --all-players stop"
bindsym XF86AudioPrev exec "playerctl --all-players previous"
bindsym XF86AudioNext exec "playerctl --all-players next"

# Screenshots
bindsym Print exec maim -s -u | xclip -selection clipboard -t image/png -i
bindsym $mod+Shift+P exec maim -s -u | xclip -selection clipboard -t image/png -i

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

bindsym $mod+c exec firefox

bindsym $mod+l exec i3lock

# kill focused window
bindsym $mod+Shift+A kill

# start rofi (a program launcher)
bindsym $mod+d exec "rofi -modi drun,run -show drun -show-icons"

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+z layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+q focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

workspace $ws1 output DP-2
workspace $ws2 output DP-4
workspace $ws3 output DP-2
workspace $ws4 output DP-4
workspace $ws5 output DP-2
workspace $ws6 output DP-4
workspace $ws7 output DP-2
workspace $ws8 output DP-4
workspace $ws9 output DP-2
workspace $ws10 output DP-4

# switch to workspace
bindsym $mod+ampersand workspace number $ws1
bindsym $mod+eacute workspace number $ws2
bindsym $mod+quotedbl workspace number $ws3
bindsym $mod+apostrophe workspace number $ws4
bindsym $mod+parenleft workspace number $ws5
bindsym $mod+minus workspace number $ws6
bindsym $mod+egrave workspace number $ws7
bindsym $mod+underscore workspace number $ws8
bindsym $mod+ccedilla workspace number $ws9
bindsym $mod+agrave workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+eacute move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+egrave move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+ccedilla move container to workspace number $ws9
bindsym $mod+Shift+agrave move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym m resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Create Log out, Reboot, Poweroff bindings
mode "(S)uspend, (L)ogout, (R)eboot, (P)oweroff" {
        bindsym r exec --no-startup-id systemctl reboot
        bindsym s exec --no-startup-id systemctl suspend; mode "default"
        bindsym l exit
        bindsym p exec --no-startup-id systemctl poweroff

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+p exec rofi -show p -modi p:$HOME/.config/rofi/rofi_power_menu

for_window [class=".*"] title_format "   %title"
for_window [class=".*"] border pixel 1
client.focused #74c7ec55 #9399b255 #cdd6f4 #2e9ef4 #74c7ec55
client.focused_inactive #00000000 #9399b255 #cdd6f4 #2e9ef4 #00000000
client.unfocused #fab38500 #31324488 #cdd6f4 #2e9ef4 #00000000
gaps inner 10

